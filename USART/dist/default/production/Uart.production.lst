

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 02 19:54:22 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F46K80 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _RCREG2	set	3962
    49  0000                     _TXREG2	set	3961
    50  0000                     _PIR3bits	set	4004
    51  0000                     _RCREG	set	4014
    52  0000                     _TXREG1	set	4013
    53  0000                     _PIR1bits	set	3998
    54  0000                     _SPBRG2	set	3963
    55  0000                     _BAUDCON2	set	4025
    56  0000                     _RCSTA2	set	4006
    57  0000                     _TXSTA2	set	4026
    58  0000                     _SPBRG1	set	4015
    59  0000                     _BAUDCON1	set	4007
    60  0000                     _RCSTA1	set	4011
    61  0000                     _TXSTA1	set	4012
    62  0000                     _OSCTUNEbits	set	3995
    63  0000                     _OSCCON	set	4051
    64  0000                     _RCIF	set	31989
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  00FF7E                     __pcinit:
    70                           	opt stack 0
    71  00FF7E                     start_initialization:
    72                           	opt stack 0
    73  00FF7E                     __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Clear objects allocated to BANK0 (68 bytes)
    77  00FF7E  EE00  F060         	lfsr	0,__pbssBANK0
    78  00FF82  0E44               	movlw	68
    79  00FF84                     clear_0:
    80  00FF84  6AEE               	clrf	postinc0,c
    81  00FF86  06E8               	decf	wreg,f,c
    82  00FF88  E1FD               	bnz	clear_0
    83                           
    84                           ; Clear objects allocated to COMRAM (68 bytes)
    85  00FF8A  EE00  F001         	lfsr	0,__pbssCOMRAM
    86  00FF8E  0E44               	movlw	68
    87  00FF90                     clear_1:
    88  00FF90  6AEE               	clrf	postinc0,c
    89  00FF92  06E8               	decf	wreg,f,c
    90  00FF94  E1FD               	bnz	clear_1
    91  00FF96                     end_of_initialization:
    92                           	opt stack 0
    93  00FF96                     __end_of__initialization:
    94                           	opt stack 0
    95  00FF96  0100               	movlb	0
    96  00FF98  EFCE  F07F         	goto	_main	;jump to C main() function
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000001                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000001                     _rx_buffer:
   104                           	opt stack 0
   105  000001                     	ds	68
   106                           postinc0	equ	0xFEE
   107                           wreg	equ	0xFE8
   108                           
   109                           	psect	bssBANK0
   110  000060                     __pbssBANK0:
   111                           	opt stack 0
   112  000060                     _tx_buffer:
   113                           	opt stack 0
   114  000060                     	ds	68
   115                           postinc0	equ	0xFEE
   116                           wreg	equ	0xFE8
   117                           
   118                           	psect	cstackCOMRAM
   119  000045                     __pcstackCOMRAM:
   120                           	opt stack 0
   121  000045                     putch@byte:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x0
   125  000045                     	ds	1
   126  000046                     ??_main:
   127                           
   128                           ; 1 bytes @ 0x1
   129  000046                     	ds	2
   130                           postinc0	equ	0xFEE
   131                           wreg	equ	0xFE8
   132                           
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 22 in file "Main.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, status,2, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   156 ;;Total ram usage:        2 bytes
   157 ;; Hardware stack levels required when called:    1
   158 ;; This function calls:
   159 ;;		_putch
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           	psect	text0
   166  00FF9C                     __ptext0:
   167                           	opt stack 0
   168  00FF9C                     _main:
   169                           	opt stack 30
   170                           
   171                           ;Main.c: 23: OSCCON = 0b01110000;
   172                           
   173                           ;incstack = 0
   174  00FF9C  0E70               	movlw	112
   175  00FF9E  6ED3               	movwf	4051,c	;volatile
   176                           
   177                           ;Main.c: 24: OSCTUNEbits.PLLEN = 1;
   178  00FFA0  8C9B               	bsf	3995,6,c	;volatile
   179                           
   180                           ;Main.c: 41: TXSTA1 = 0b10100010;
   181  00FFA2  0EA2               	movlw	162
   182  00FFA4  6EAC               	movwf	4012,c	;volatile
   183                           
   184                           ;Main.c: 42: RCSTA1 = 152;
   185  00FFA6  0E98               	movlw	152
   186  00FFA8  6EAB               	movwf	4011,c	;volatile
   187                           
   188                           ;Main.c: 43: BAUDCON1 = 0b01000000;
   189  00FFAA  0E40               	movlw	64
   190  00FFAC  6EA7               	movwf	4007,c	;volatile
   191                           
   192                           ;Main.c: 44: SPBRG1 = 103;
   193  00FFAE  0E67               	movlw	103
   194  00FFB0  6EAF               	movwf	4015,c	;volatile
   195                           
   196                           ;Main.c: 45: TXSTA2 = 0b10100010;
   197  00FFB2  0EA2               	movlw	162
   198  00FFB4  6EBA               	movwf	4026,c	;volatile
   199                           
   200                           ;Main.c: 46: RCSTA2 = 152;
   201  00FFB6  0E98               	movlw	152
   202  00FFB8  6EA6               	movwf	4006,c	;volatile
   203                           
   204                           ;Main.c: 47: BAUDCON2 = 0b01000000;
   205  00FFBA  0E40               	movlw	64
   206  00FFBC  6EB9               	movwf	4025,c	;volatile
   207                           
   208                           ;Main.c: 48: SPBRG2 = 103;
   209  00FFBE  0E67               	movlw	103
   210  00FFC0  6E7B               	movwf	3963,c	;volatile
   211  00FFC2                     
   212                           ;Main.c: 52: {
   213                           ;Main.c: 53: putch('H');
   214  00FFC2  0E48               	movlw	72
   215  00FFC4  ECB9  F07F         	call	_putch
   216                           
   217                           ;Main.c: 54: putch('e');
   218  00FFC8  0E65               	movlw	101
   219  00FFCA  ECB9  F07F         	call	_putch
   220                           
   221                           ;Main.c: 55: putch('l');
   222  00FFCE  0E6C               	movlw	108
   223  00FFD0  ECB9  F07F         	call	_putch
   224                           
   225                           ;Main.c: 56: putch('l');
   226  00FFD4  0E6C               	movlw	108
   227  00FFD6  ECB9  F07F         	call	_putch
   228                           
   229                           ;Main.c: 57: putch('o');
   230  00FFDA  0E6F               	movlw	111
   231  00FFDC  ECB9  F07F         	call	_putch
   232                           
   233                           ;Main.c: 58: putch('\n');
   234  00FFE0  0E0A               	movlw	10
   235  00FFE2  ECB9  F07F         	call	_putch
   236                           
   237                           ;Main.c: 59: _delay(8000000);
   238  00FFE6  0E29               	movlw	41
   239  00FFE8  6E47               	movwf	(??_main+1)& (0+255),c
   240  00FFEA  0E96               	movlw	150
   241  00FFEC  6E46               	movwf	??_main& (0+255),c
   242  00FFEE  0E7F               	movlw	127
   243  00FFF0                     u67:
   244  00FFF0  2EE8               	decfsz	wreg,f,c
   245  00FFF2  D7FE               	bra	u67
   246  00FFF4  2E46               	decfsz	??_main& (0+255),f,c
   247  00FFF6  D7FC               	bra	u67
   248  00FFF8  2E47               	decfsz	(??_main+1)& (0+255),f,c
   249  00FFFA  D7FA               	bra	u67
   250  00FFFC  F000               	nop	
   251  00FFFE  D7E1               	goto	l29
   252  010000                     __end_of_main:
   253                           	opt stack 0
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           
   257 ;; *************** function _putch *****************
   258 ;; Defined at:
   259 ;;		line 27 in file "H:/MPLabX/SourceHeader/usart.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;  byte            1    wreg     unsigned char 
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  byte            1    0[COMRAM] unsigned char 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   277 ;;Total ram usage:        1 bytes
   278 ;; Hardware stack levels used:    1
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text1
   287  00FF72                     __ptext1:
   288                           	opt stack 0
   289  00FF72                     _putch:
   290                           	opt stack 30
   291                           
   292                           ;incstack = 0
   293                           ;putch@byte stored from wreg
   294  00FF72  6E45               	movwf	putch@byte,c
   295  00FF74                     
   296                           ;usart.c: 29: while(!PIR1bits.TX1IF) continue;
   297  00FF74  A89E               	btfss	3998,4,c	;volatile
   298  00FF76  D7FE               	goto	l703
   299                           
   300                           ;usart.c: 30: TXREG1 = byte;
   301  00FF78  C045  FFAD         	movff	putch@byte,4013	;volatile
   302  00FF7C  0012               	return		;funcret
   303  00FF7E                     __end_of_putch:
   304                           	opt stack 0
   305  0000                     postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	rparam
   311  0000                     postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3      71
    BANK0           160      0      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              1 COMRAM     2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      44       5       42.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3      47       1       74.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B       6        0.0%
DATA                 0      0      8B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 02 19:54:22 2019

                     l29 FFC2                       u67 FFF0                      l703 FF74  
                    wreg 000FE8                     _RCIF 007CF5                     _main FF9C  
                   start 0000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0045                    _RCREG 000FAE                    _putch FF72  
         __CFG_BOREN$OFF 000000          __initialization FF7E             __end_of_main 0000  
                 ??_main 0046            __activetblptr 000000           __CFG_PLLCFG$ON 000000  
                 ?_putch 0045           __CFG_WDTEN$OFF 000000                   _RCREG2 000F7A  
                 _RCSTA1 000FAB                   _RCSTA2 000FA6                   _OSCCON 000FD3  
                 _SPBRG1 000FAF                   _SPBRG2 000F7B                   _TXREG1 000FAD  
                 _TXREG2 000F79                   _TXSTA1 000FAC                   _TXSTA2 000FBA  
         __CFG_XINST$OFF 000000                   clear_0 FF84                   clear_1 FF90  
             __accesstop 0060  __end_of__initialization FF96            ___rparam_used 000001  
         __pcstackCOMRAM 0045            __end_of_putch FF7E                  ??_putch 0045  
             __pbssBANK0 0060                  __Hparam 0000                  __Lparam 0000  
                __pcinit FF7E                  __ramtop 0F00                  __ptext0 FF9C  
                __ptext1 FF72     end_of_initialization FF96                  postinc0 000FEE  
       __CFG_FOSC$INTIO2 000000      start_initialization FF7E              __pbssCOMRAM 0001  
               _BAUDCON1 000FA7                 _BAUDCON2 000FB9           __size_of_putch 000C  
               _PIR1bits 000F9E                 _PIR3bits 000FA4                _rx_buffer 0001  
              _tx_buffer 0060                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0064                putch@byte 0045              _OSCTUNEbits 000F9B  
